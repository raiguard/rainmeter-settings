[Rainmeter]
MiddleMouseUpAction=[!Refresh]
AccurateText=1

[Metadata]
Name=Rainmeter Settings Example
Author=raiguard
Information=An example skin demonstrating the capabilities and uses of the dynamic Rainmeter settings system.
License=Creative Commons BY-NC-SA 3.0
Version=1.0.0

[Variables]
@includeStyleSheet=#@#StyleSheet.inc
@includeSkinSettings=#@#SkinSettings.inc

; ========= MEASURES =========

[MeasureSkinSettingsPath]
Measure=String
String=#skinSettingsPath#
Substitute="\":"\\"

[MeasureSkinConfigPath]
Measure=String
String=#skinConfigPath#
Substitute="\":"\\"

[MeasureSettingsScript]
Measure=Script
ScriptFile=#@#Scripts\Settings.lua
MeterUpdateGroup=Settings
SettingsPath=#skinSettingsPath#
ConfigPath=#skinConfigPath#
ToggleOn=[\x5a]
ToggleOff=[\x56]
RadioOn=[\x5c]
RadioOff=[\x5b]
; Default ActionSet will be used when the actionSet argument is not given
DefaultAction=[!Update "#skinConfigPath#"][!Redraw "#skinConfigPath#"]
ShowFahrenheitAction=[!SetOption MeterTemperatureString Text "Temperature: 69#deg##tempUnits#" "#skinConfigPath#"][!UpdateMeter MeterTemperatureString "#skinConfigPath#"][!Redraw "#skinConfigPath#"]
Radio1Action=[!SetOption MeterRadio1String Text "Radio 1: #radio1#" "#skinConfigPath#"][!UpdateMeter MeterRadio1String "#skinConfigPath#"][!Redraw "#skinConfigPath#"]
BoxColorAction=[!SetOption MeterBox SolidColor "#colorBox#" "#skinConfigPath#"][!UpdateMeter MeterBox "#skinConfigPath#"][!Redraw "#skinConfigPath#"]
; IfLogic ActionSets - the script will trigger the actionSet corresponding to the new state of the variable that was changed
Toggle2Action1=[!ShowMeter MeterToggle2String "#skinConfigPath#"][!SetOption MeterToggle2String Y "#rowSpacing#R" "#skinConfigPath#"][!UpdateMeter MeterToggle2String "#skinConfigPath#"][!UpdateMeterGroup Background "#skinConfigPath#"][!Redraw "#skinConfigPath#"]
Toggle2Action0=[!HideMeter MeterToggle2String "#skinConfigPath#"][!SetOption MeterToggle2String Y "0R" "#skinConfigPath#"][!UpdateMeter MeterToggle2String "#skinConfigPath#"][!UpdateMeterGroup Background "#skinConfigPath#"][!Redraw "#skinConfigPath#"]
CustomTextActionAuto=[!UpdateMeasure MeasureCustomTextInputBoxString][!UpdateMeter MeterCustomTextInputBox][!Redraw][!SetOption MeterCustomTextString Text "%1" "#skinConfigPath#"][!UpdateMeter MeterCustomTextString "#skinConfigPath#"][!Redraw "#skinConfigPath#"]
CustomTextAction=[!UpdateMeasure MeasureCustomTextInputBoxString][!UpdateMeter MeterCustomTextInputBox][!Redraw][!SetOption MeterCustomTextString Text "#customText#" "#skinConfigPath#"][!UpdateMeter MeterCustomTextString "#skinConfigPath#"][!Redraw "#skinConfigPath#"]

[MeasureInputText]
Measure=Plugin
Plugin=InputText
SolidColor=#colorInputBg#
FontColor=#colorMain#
FontSize=10
FontFace=Roboto
UpdateDivider=-1
FocusDismiss=1
DynamicVariables=1
W=#contentWidth#
Command1=[!CommandMeasure MeasureSettingsScript "Set('colorBox', '$UserInput$', 'BoxColorAction')"] DefaultValue="#colorBox#" X=[MeterCustomColorInputBox:X] Y=[MeterCustomColorInputBox:Y] H=[MeterCustomColorInputBox:H]
Command2=[!CommandMeasure MeasureSettingsScript "CustomText('$UserInput$')"] DefaultValue="Leave blank to set auto detect" X=[MeterCustomTextInputBox:X] Y=[MeterCustomTextInputBox:Y] H=[MeterCustomTextInputBox:H]

[MeasureCustomTextInputBoxString]
Measure=String
String=#customText#
Substitute="auto":"Auto detect"
DynamicVariables=1

; ========= METERS =========

[MeterBackground]
Meter=Image
MeterStyle=StyleBackground

[MeterTitle]
Meter=String
MeterStyle=StyleString | StyleStringTitle
Text=Example - Settings

; ----- Toggle Buttons -----

[MeterToggle1Button]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton
Text=[&MeasureSettingsScript:GetIcon([#toggle1])]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Toggle('toggle1', '1', '0')"]

[MeterToggle1Label]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Toggle 1

[MeterToggle2Button]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton
Text=[&MeasureSettingsScript:GetIcon([#toggle2])]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Toggle('toggle2', '1', '0', 'Toggle2Action', true)"]

[MeterToggle2Label]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Toggle 2

[MeterShowFahrenheitButton]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton
Text=[&MeasureSettingsScript:GetIcon('[#tempUnits]', 'F', 'C')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Toggle('tempUnits', 'F', 'C', 'ShowFahrenheitAction')"]

[MeterShowFahrenheitLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Show Fahrenheit Temp

; ----- Radio Buttons -----

; Radio 1
[MeterRadio1Label]
Meter=String
MeterStyle=StyleString
Text=Radio 1:

[MeterRadio1FooButton]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton
Text=[&MeasureSettingsScript:GetIcon('[#radio1]', 'Foo')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('radio1', 'Foo', 'Radio1Action')"]

[MeterRadio1FooLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Foo

[MeterRadio1BarButton]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton | StyleStringRadioButton
Text=[&MeasureSettingsScript:GetIcon('#radio1#', 'Bar')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('radio1', 'Bar', 'Radio1Action')"]

[MeterRadio1BarLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Bar

[MeterRadio1HalpButton]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton | StyleStringRadioButton
Text=[&MeasureSettingsScript:GetIcon('#radio1#', 'Halp')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('radio1', 'Halp', 'Radio1Action')"]

[MeterRadio1HalpLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Halp

; Box Color
[MeterBoxColorLabel]
Meter=String
MeterStyle=StyleString
Text=Box Color:

[MeterBoxColorRedButton]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton
Text=[&MeasureSettingsScript:GetIcon('#colorBox#', '255,0,0')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('colorBox', '255,0,0', 'BoxColorAction')"]

[MeterBoxColorRedLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Red

[MeterBoxColorGreenButton]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton | StyleStringRadioButton
Text=[&MeasureSettingsScript:GetIcon('#colorBox#', '0,255,0')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('colorBox', '0,255,0', 'BoxColorAction')"]

[MeterBoxColorGreenLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Green

[MeterBoxColorBlueButton]
Meter=String
MeterStyle=StyleString | StyleStringToggleButton | StyleStringRadioButton
Text=[&MeasureSettingsScript:GetIcon('#colorBox#', '0,0,255')]
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Set('colorBox', '0,0,255', 'BoxColorAction')"]

[MeterBoxColorBlueLabel]
Meter=String
MeterStyle=StyleString | StyleStringToggleLabel
Text=Blue

[MeterSwitchDemoButton]
Meter=String
MeterStyle=StyleString
Text=Test
LeftMouseUpAction=[!CommandMeasure MeasureSettingsScript "Switch({ switchDemo1 = { 'value1', 'value2', 'value3' }, switchDemo2 = { false, 10245, 'hi' } })"]

; ----- Input Boxes -----

[MeterCustomColorLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Custom Color:

[MeterCustomColorInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=#colorBox#
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 1"]

[MeterCustomTextLabel]
Meter=String
MeterStyle=StyleString | StyleStringInputBoxLabel
Text=Custom Text:

[MeterCustomTextInputBox]
Meter=String
MeterStyle=StyleString | StyleStringInputBox
Text=[MeasureCustomTextInputBoxString]
LeftMouseUpAction=[!CommandMeasure MeasureInputText "Executebatch 2"]

[BackgroundHeight]
Meter=Image
MeterStyle=StyleBackgroundHeight
